<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="55022" started-at="2021-11-12T16:27:13 IST" finished-at="2021-11-12T16:28:08 IST">
    <groups>
    </groups>
    <test name="FourTest" duration-ms="8374" started-at="2021-11-12T16:27:13 IST" finished-at="2021-11-12T16:27:21 IST">
      <class name="tests.FourTest">
        <test-method status="FAIL" signature="FourTest()[pri:0, instance:tests.FourTest@15eb5ee5]" name="FourTest" duration-ms="7848" started-at="2021-11-12T16:27:13 IST" finished-at="2021-11-12T16:27:20 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at tests.FourTest.FourTest(FourTest.java:26)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FourTest -->
        <test-method status="PASS" signature="closure()[pri:0, instance:tests.FourTest@15eb5ee5]" name="closure" is-config="true" duration-ms="110" started-at="2021-11-12T16:27:21 IST" finished-at="2021-11-12T16:27:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- tests.FourTest -->
    </test> <!-- FourTest -->
    <test name="ThreeTest" duration-ms="5613" started-at="2021-11-12T16:27:21 IST" finished-at="2021-11-12T16:27:27 IST">
      <class name="tests.ThreeTest">
        <test-method status="PASS" signature="ThreeTest()[pri:0, instance:tests.ThreeTest@4f18837a]" name="ThreeTest" duration-ms="5606" started-at="2021-11-12T16:27:21 IST" finished-at="2021-11-12T16:27:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ThreeTest -->
      </class> <!-- tests.ThreeTest -->
    </test> <!-- ThreeTest -->
    <test name="TwoTest" duration-ms="5173" started-at="2021-11-12T16:27:27 IST" finished-at="2021-11-12T16:27:32 IST">
      <class name="tests.TwoTest">
        <test-method status="PASS" signature="TwoTest()[pri:0, instance:tests.TwoTest@6b927fb]" name="TwoTest" duration-ms="5170" started-at="2021-11-12T16:27:27 IST" finished-at="2021-11-12T16:27:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TwoTest -->
      </class> <!-- tests.TwoTest -->
    </test> <!-- TwoTest -->
    <test name="LoginTest" duration-ms="35419" started-at="2021-11-12T16:27:32 IST" finished-at="2021-11-12T16:28:08 IST">
      <class name="tests.LoginTest">
        <test-method status="PASS" signature="openApplication()[pri:0, instance:tests.LoginTest@1aa7ecca]" name="openApplication" is-config="true" duration-ms="3254" started-at="2021-11-12T16:27:33 IST" finished-at="2021-11-12T16:27:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@1aa7ecca]" name="LoginTest" duration-ms="11127" started-at="2021-11-12T16:27:36 IST" data-provider="getLoginData" finished-at="2021-11-12T16:27:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="closebrowser()[pri:0, instance:tests.LoginTest@1aa7ecca]" name="closebrowser" is-config="true" duration-ms="96" started-at="2021-11-12T16:27:48 IST" finished-at="2021-11-12T16:27:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:tests.LoginTest@1aa7ecca]" name="openApplication" is-config="true" duration-ms="3929" started-at="2021-11-12T16:27:48 IST" finished-at="2021-11-12T16:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@1aa7ecca]" name="LoginTest" duration-ms="11263" started-at="2021-11-12T16:27:52 IST" data-provider="getLoginData" finished-at="2021-11-12T16:28:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="closebrowser()[pri:0, instance:tests.LoginTest@1aa7ecca]" name="closebrowser" is-config="true" duration-ms="131" started-at="2021-11-12T16:28:03 IST" finished-at="2021-11-12T16:28:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:tests.LoginTest@1aa7ecca]" name="openApplication" is-config="true" duration-ms="3189" started-at="2021-11-12T16:28:03 IST" finished-at="2021-11-12T16:28:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@1aa7ecca]" name="LoginTest" duration-ms="1207" started-at="2021-11-12T16:28:06 IST" data-provider="getLoginData" finished-at="2021-11-12T16:28:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[saipattabhi18@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sai@2255]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Successfull]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="closebrowser()[pri:0, instance:tests.LoginTest@1aa7ecca]" name="closebrowser" is-config="true" duration-ms="106" started-at="2021-11-12T16:28:07 IST" finished-at="2021-11-12T16:28:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- LoginTest -->
  </suite> <!-- Suite -->
</testng-results>
